///////////////////////////////////////////////////////////////////
//
#Использовать "."
#Использовать cli
#Использовать tempfiles

Перем Лог;     // Объект       - объект записи лога приложения

///////////////////////////////////////////////////////////////////////////////

Процедура ВыполнитьПриложение()

	МенеджерОбработкиДанных = Новый МенеджерОбработкиДанных();

	МенеджерОбработкиДанных.ДобавитьРабочийКаталог("$yardDir", ТекущийСценарий().Каталог);

	Приложение = Новый КонсольноеПриложение(ПараметрыПриложения.ИмяПриложения(),
	                                        "приложение для загрузки и подготовки релизов 1С");
	Приложение.Версия("version", ПараметрыПриложения.Версия());

	Приложение.ДобавитьКоманду("process p", "Запускает обработку данных по указанной настройке (json)",
	                           МенеджерОбработкиДанных);
	
	Приложение.ДобавитьКоманду("releases r", "работа с релизами с сайта 1С",
	                           Новый Релизы1С);
	
	Приложение.ДобавитьКоманду("extract e" , "распаковка шаблона конфигурации 1С из EFD-файла",
	                           Новый РаспаковщикРелизов1С);
	
	Приложение.ДобавитьКоманду("extract-all ea" , "распаковка шаблонов конфигурации 1С из EFD-файлов в каталоге",
	                           Новый РаспаковщикКаталогаРелизов1С);
	
	Приложение.ДобавитьКоманду("build-cf b" , "выполняет обновление конфигурации (CF) файлом обновления (CFU)
	                                          |и помещает результат в новый файл CF",
	                           Новый СборщикКонфигураций1С);
	
	Приложение.ДобавитьКоманду("build-all ba" , "для всех файлов обновления (CFU) в каталоге
	                                            |ищет доступные для обновления файлы(CF)
	                                            |и выполняет обновление",
	                           Новый СборщикКонфигураций1СВКаталоге);
	
	Приложение.ДобавитьКоманду("upload-cf ucf" , "выполняет выгрузку конфигурации 1С из файла конфигурации (CF)
	                                             |в репозитарий git",
	                           Новый ВыгрузкаКонфигурацииВГит);
	
	Приложение.ДобавитьКоманду("upload-all ua" , "выполняет выгрузку всех версий конфигурации 1С в каталоге
	                                             |в репозитарий git",
	                           Новый ВыгрузкаКаталогаКонфигурацииВГит);
	
	Приложение.Опция("v verbose", Ложь, "вывод отладочной информации в процессе выполнения")
              .Флаговый();
	
	Приложение.Запустить(АргументыКоманднойСтроки);
	
КонецПроцедуры // ВыполнитьПриложение()

// Функция - проверяет, что приложение запущено в режиме тестирования
//
// Возвращаемое значение:
//   Булево  - Истина - приложение запущено в режиме тестирования
//
Функция ЭтоТест()
	
	Попытка
		Возврат ЭтотОбъект.ЭтоТест;
	Исключение
		Возврат Ложь;
	КонецПопытки;

КонецФункции // ЭтоТест()

///////////////////////////////////////////////////////

Лог = ПараметрыПриложения.Лог();

Попытка

	ВыполнитьПриложение();

Исключение

	Лог.КритичнаяОшибка(ОписаниеОшибки());
	ВременныеФайлы.Удалить();

	Если ЭтоТест() Тогда
		ВызватьИсключение ОписаниеОшибки();
	Иначе
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПопытки;
